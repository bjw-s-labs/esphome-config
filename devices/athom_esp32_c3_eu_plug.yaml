---
# Device: Athom ESP32-C3 EU Plug
# Config is based on https://github.com/athom-tech/esp32-configs/blob/main/athom-smart-plug.yaml
#

packages:
  <<: !include_dir_named ../components/common
  wifi: !include ../components/hardware/wifi.yaml
  board: !include ../boards/esp32_c3_devkitm.yaml
  bluetooth_proxy: !include ../components/hardware/bluetooth_proxy.yaml

substitutions:
  ble_scan_interval: 211ms
  ble_scan_window: 120ms

  relay_restore_mode: RESTORE_DEFAULT_OFF # Restore the relay (GPO switch) upon reboot to state
  sensor_update_interval: 10s # Set the update interval for sensors

preferences:
  flash_write_interval: 5min

api:
  # Only enable BLE tracking when wifi is up and api is connected
  # Gives single-core ESP32-C3 devices time to manage wifi and authenticate with api
  on_client_connected:
     - esp32_ble_tracker.start_scan:
        continuous: true
  # Disable BLE tracking when there are no api connections live
  on_client_disconnected:
    if:
      condition:
        not:
          api.connected:
      then:
        - esp32_ble_tracker.stop_scan:

esp32_ble_tracker:
  scan_parameters:
    # Don't auto start BLE scanning, we control it in the `api` block's automation.
    continuous: false

uart:
  rx_pin: GPIO20
  baud_rate: 4800
  data_bits: 8
  stop_bits: 1
  parity: EVEN

globals:
  - id: total_energy
    type: float
    restore_value: yes
    initial_value: '0.0'

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO3
      mode: INPUT_PULLUP
      inverted: true
    name: "Power Button"
    id: power_button
    disabled_by_default: true
    on_multi_click:
      - timing:
          - ON for at most 1s
          - OFF for at least 0.2s
        then:
          - switch.toggle: relay

sensor:
  - platform: cse7766
    current:
      name: "Current"
      icon: mdi:current-ac
      filters:
        - throttle_average: ${sensor_update_interval}
        - lambda: if (x < 0.060) return 0.0; else return x;   #For the chip will report less than 3w power when no load is connected
      on_value_range:
        - above: 16
          then:
            - switch.turn_off: relay

    voltage:
      name: "Voltage"
      icon: mdi:sine-wave
      filters:
        - throttle_average: ${sensor_update_interval}

    power:
      name: "Power"
      id: power_sensor
      icon: mdi:power
      filters:
        - throttle_average: ${sensor_update_interval}
        - lambda: if (x < 3.0) return 0.0; else return x;    #For the chip will report less than 3w power when no load is connected

    energy:
      name: "Energy"
      id: energy
      icon: mdi:lightning-bolt
      unit_of_measurement: kWh
      filters:
        - throttle: ${sensor_update_interval}
        # Multiplication factor from W to kW is 0.001
        - multiply: 0.001
      on_value:
        then:
          - lambda: |-
              static float previous_energy_value = 0.0;
              float current_energy_value = id(energy).state;
              id(total_energy) += current_energy_value - previous_energy_value;
              previous_energy_value = current_energy_value;
              id(total_energy_sensor).update();

    apparent_power:
      name: "Apparent Power"
      icon: mdi:power
      filters:
        - throttle_average: ${sensor_update_interval}
    reactive_power:
      name: "Reactive Power"
      icon: mdi:flash
      filters:
        - throttle_average: ${sensor_update_interval}
    power_factor:
      name: "Power Factor"
      icon: mdi:percent-outline
      filters:
        - throttle_average: ${sensor_update_interval}

  - platform: template
    name: "Total Energy"
    id: total_energy_sensor
    unit_of_measurement: kWh
    device_class: "energy"
    state_class: "total_increasing"
    icon: "mdi:lightning-bolt"
    accuracy_decimals: 3
    lambda: |-
      return id(total_energy);
    update_interval: ${sensor_update_interval}

  - platform: total_daily_energy
    name: "Total Daily Energy"
    icon: mdi:hours-24
    restore: true
    power_id: power_sensor
    unit_of_measurement: kWh
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

switch:
  - platform: gpio
    name: "Switch"
    pin: GPIO5
    id: relay
    icon: mdi:power-socket-eu
    restore_mode: ${relay_restore_mode}

light:
  - platform: status_led
    name: "Status LED"
    id: blue_led
    icon: mdi:lightbulb-outline
    disabled_by_default: true
    pin:
      inverted: true
      number: GPIO6
